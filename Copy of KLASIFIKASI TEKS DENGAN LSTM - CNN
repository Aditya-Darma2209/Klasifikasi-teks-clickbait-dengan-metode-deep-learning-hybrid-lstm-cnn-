{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"gUq6vHzNZHSg"},"outputs":[],"source":["import numpy as np\n","from sklearn.model_selection import train_test_split\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Embedding, LSTM, Dense, Dropout\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","from tensorflow.keras.optimizers import Adam\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"elapsed":20,"status":"ok","timestamp":1737033915981,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"},"user_tz":-420},"id":"do00Oxrvaunq","outputId":"1eab4eb1-d0ce-4bb8-f3b6-146016f36b52"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                               title          label  \\\n","0  Masuk Radar Pilwalkot Medan, Menantu Jokowi Be...  non-clickbait   \n","1  Malaysia Sudutkan RI: Isu Kabut Asap hingga In...  non-clickbait   \n","2  Viral! Driver Ojol di Bekasi Antar Pesanan Mak...      clickbait   \n","3  Kemensos Salurkan Rp 7,3 M bagi Korban Kerusuh...  non-clickbait   \n","4  Terkait Mayat Bayi Mengenaskan di Tangerang, S...  non-clickbait   \n","5  Uang Rp 1,6 M yang Raib di Parkiran Kantor Gub...  non-clickbait   \n","6  MPR: Amandemen UUD 1945 Tak Akan Melebar ke Ma...  non-clickbait   \n","7   Muncul Istana di Tengah Rekonsiliasi Rusuh Papua  non-clickbait   \n","8  Peringati Tahun Baru Islam, Banyuwangi Kembali...  non-clickbait   \n","9  Wanita Asal Kendari Nyaris Diperkosa di Jalana...  non-clickbait   \n","\n","   label_score  \n","0            0  \n","1            0  \n","2            1  \n","3            0  \n","4            0  \n","5            0  \n","6            0  \n","7            0  \n","8            0  \n","9            0  "],"text/html":["\n","  <div id=\"df-7a806635-d8c8-4c0b-85a2-399d482c36c0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>label</th>\n","      <th>label_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Masuk Radar Pilwalkot Medan, Menantu Jokowi Be...</td>\n","      <td>non-clickbait</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Malaysia Sudutkan RI: Isu Kabut Asap hingga In...</td>\n","      <td>non-clickbait</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Viral! Driver Ojol di Bekasi Antar Pesanan Mak...</td>\n","      <td>clickbait</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kemensos Salurkan Rp 7,3 M bagi Korban Kerusuh...</td>\n","      <td>non-clickbait</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Terkait Mayat Bayi Mengenaskan di Tangerang, S...</td>\n","      <td>non-clickbait</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Uang Rp 1,6 M yang Raib di Parkiran Kantor Gub...</td>\n","      <td>non-clickbait</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>MPR: Amandemen UUD 1945 Tak Akan Melebar ke Ma...</td>\n","      <td>non-clickbait</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Muncul Istana di Tengah Rekonsiliasi Rusuh Papua</td>\n","      <td>non-clickbait</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Peringati Tahun Baru Islam, Banyuwangi Kembali...</td>\n","      <td>non-clickbait</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Wanita Asal Kendari Nyaris Diperkosa di Jalana...</td>\n","      <td>non-clickbait</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a806635-d8c8-4c0b-85a2-399d482c36c0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a806635-d8c8-4c0b-85a2-399d482c36c0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a806635-d8c8-4c0b-85a2-399d482c36c0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a9119d17-ca74-4f32-9f8f-fd46dc575e50\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a9119d17-ca74-4f32-9f8f-fd46dc575e50')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a9119d17-ca74-4f32-9f8f-fd46dc575e50 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 15000,\n  \"fields\": [\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14970,\n        \"samples\": [\n          \"Gantikan Dimas Ekky, Andi Gilang Finis Posisi 24 Moto2 Misano\",\n          \"Film Lorong, Rekor Terberat Prisia Nasution Jalani Syuting Lebih 24 Jam\",\n          \"BJ Habibie Meninggal, Bunga Citra Lestari Sempat Disangka Pegawai Bank Oleh Beliau\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"clickbait\",\n          \"non-clickbait\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}],"source":["df = pd.read_csv('/content/main.csv')\n","df.head(10)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1737033915981,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"},"user_tz":-420},"id":"00BSZZIWwqEo","outputId":"6e0dde00-4925-4eb2-e42c-ddc3edb63c1d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["22"]},"metadata":{},"execution_count":3}],"source":["df.duplicated().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_wZfc7XxwrxL"},"outputs":[],"source":["df.drop_duplicates(inplace = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1737033915981,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"},"user_tz":-420},"id":"APTEzNPhwvaD","outputId":"32689ca3-5818-4c4e-d613-a15b402cd5bf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":5}],"source":["df.duplicated().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":377,"status":"ok","timestamp":1737033916349,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"},"user_tz":-420},"id":"_NfKgsX-w7lQ","outputId":"ef591898-2a83-4d9b-8451-ba4395963824"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["title          0\n","label          0\n","label_score    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>title</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>label</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>label_score</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":6}],"source":["df.isna().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":693},"executionInfo":{"elapsed":907,"status":"ok","timestamp":1737033917252,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"},"user_tz":-420},"id":"Wtz0aMf-xCho","outputId":"03954f55-dc17-494b-cd55-2ac69945c6ea"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["label\n","non-clickbait    8693\n","clickbait        6285\n","Name: count, dtype: int64\n","label\n","non-clickbait    8693\n","clickbait        6285\n","Name: count, dtype: int64\n"]}],"source":["import matplotlib.pyplot as plt\n","\n","df['label'].value_counts().plot(kind='bar', color='salmon', title=\"Distribusi Data\")\n","plt.xlabel('label')\n","plt.ylabel('Jumlah')\n","plt.show()\n","\n","print(df['label'].value_counts())\n","\n","# Print jumlah setiap label\n","label_counts = df['label'].value_counts()\n","print(label_counts)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NbQISYMVZPId"},"outputs":[],"source":["# Fungsi preprocessing\n","import unicodedata\n","import re\n","\n","def clean_text(text):\n","    if not isinstance(text, str):\n","        text = str(text)\n","    text = unicodedata.normalize('NFKD', text)\n","    text = re.sub(r'[^\\x00-\\x7F]+', '', text)\n","    text = re.sub(r\"<br>\", \" \", text)\n","    text = text.lower()\n","    text = re.sub(r\"http\\S+\", \"\", text)\n","    text = re.sub(r\"@\\w+\", \"\", text)\n","    text = re.sub(r\"#\\w+\", \"\", text)\n","    text = re.sub(r\"[^\\w\\s]\", \"\", text)\n","    text = text.strip()\n","    return text\n","\n","df['clean_text'] = df['title'].apply(clean_text)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vjG1WsBkwiIB"},"outputs":[],"source":["replacement_dict = {\n","    ' gak  ': 'tidak',\n","    '  ga  ': 'tidak',\n","    '  nggak  ': 'tidak',\n","    '  enggak  ': 'tidak',\n","    '  kalo  ': 'kalau',\n","    '  tuh  ': 'itu',\n","    '  nih  ': 'ini',\n","    '  gini  ': 'begini',\n","    '  begituan  ': 'seperti itu',\n","    '  dikit  ': 'sedikit',\n","    '  ngapain  ': 'sedang apa',\n","    '  kenapa  ': 'mengapa',\n","    '  nggak usah  ': 'tidak perlu',\n","    '  udah  ': 'sudah',\n","    '  aja  ': 'saja',\n","    '  kayak  ': 'seperti',\n","    '  macem  ': 'macam',\n","    '  ngerti  ': 'mengerti',\n","    '  pake  ': 'pakai',\n","    '  ampe  ': 'sampai',\n","    '  begini nih  ': 'seperti ini',\n","    '  begitu dong  ': 'seperti itu',\n","    '  mau nggak  ': 'ingin atau tidak',\n","    '  oke  ': 'baik',\n","    '  makasih  ': 'terima kasih',\n","    '  kagak  ': 'tidak',\n","    '  abis  ': 'habis',\n","    '  gitu  ': 'begitu',\n","    '  sok  ': 'seolah-olah',\n","    '  bro  ': 'kawan',\n","    '  sis  ': 'kakak',\n","    '  bokap  ': 'ayah',\n","    '  nyokap  ': 'ibu',\n","    '  anak alay  ': 'anak lebay',\n","    '  lebay  ': 'berlebihan',\n","    '  mantul  ': 'mantap betul',\n","    '  ngomong  ': 'berbicara',\n","    '  doang  ': 'saja',\n","    '  kena prank  ': 'kena tipuan',\n","    '  galau  ': 'bingung',\n","    '  santai  ': 'tenang',\n","    '  cuy  ': 'kawan',\n","    '  mending  ': 'lebih baik',\n","    '  nantiin  ': 'tunggu',\n","    '  ntar  ': 'sebentar',\n","    '  kepoin  ': 'mencari tahu',\n","    '  ngebet  ': 'sangat ingin',\n","    '  btw  ': 'ngomong-ngomong',\n","    '  nih  ': 'ini',\n","    '  tapi  ': 'tetapi',\n","    '  daripada  ': 'dibandingkan',\n","    '  nunggu  ': 'menunggu',\n","    '  yaudah  ': 'baiklah',\n","    '  tau  ': 'tahu',\n","    '  nyeletuk  ': 'berkomentar',\n","    '  nyindir  ': 'menyindir',\n","    '  ngegas  ': 'marah-marah',\n","    '  capek  ': 'lelah',\n","    '  malah  ': 'justru',\n","    '  baper  ': 'terbawa perasaan',\n","    '  terus  ': 'lalu',\n","    '  nggak tahu  ': 'tidak tahu',\n","    '  kece  ': 'keren',\n","    '  wkwk  ': '(tertawa)',\n","    '  parah  ': 'buruk sekali',\n","    '  nggak apa-apa  ': 'tidak masalah',\n","    '  kuy  ': 'ayo',\n","    '  mabar  ': 'main bareng',\n","    '  nggak jelas  ': 'tidak jelas',\n","    '  receh  ': 'murah',\n","    '  gabut  ': 'bosan tidak ada kerjaan',\n","    '  rebahan  ': 'berbaring',\n","    '  bucin  ': 'budak cinta'\n","}"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4344,"status":"ok","timestamp":1737033922169,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"},"user_tz":-420},"id":"uW06XVETxKEl","outputId":"6a3ca058-81f2-4d34-cf2f-b2ddad73eaae"},"outputs":[{"output_type":"stream","name":"stdout","text":["                                               title          label  \\\n","0  Masuk Radar Pilwalkot Medan, Menantu Jokowi Be...  non-clickbait   \n","1  Malaysia Sudutkan RI: Isu Kabut Asap hingga In...  non-clickbait   \n","2  Viral! Driver Ojol di Bekasi Antar Pesanan Mak...      clickbait   \n","3  Kemensos Salurkan Rp 7,3 M bagi Korban Kerusuh...  non-clickbait   \n","4  Terkait Mayat Bayi Mengenaskan di Tangerang, S...  non-clickbait   \n","\n","   label_score                                         clean_text  \n","0            0  masuk radar pilwalkot medan menantu jokowi ber...  \n","1            0  malaysia sudutkan ri isu kabut asap hingga inv...  \n","2            1  viral driver ojol di bekasi antar pesanan maka...  \n","3            0  kemensos salurkan rp 73 m bagi korban kerusuha...  \n","4            0  terkait mayat bayi mengenaskan di tangerang se...  \n"]}],"source":["df.columns = df.columns.str.strip()  # Menghapus spasi tambahan\n","\n","df['title'] = df['title'].replace(replacement_dict, regex=True)\n","\n","print(df.head())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hzhkVE6RxLlc"},"outputs":[],"source":["# Cari kata-kata dari kunci replacement_dict yang masih ada di kolom Komentar\n","for word in replacement_dict.keys():\n","    mask = df['title'].str.contains(word, case=False)\n","    if mask.any():\n","        print(f\"Kata '{word}' masih ditemukan dalam {mask.sum()} baris\")"]},{"cell_type":"code","source":["baru = df[['title','label_score','clean_text']]"],"metadata":{"id":"vuleXFGalN1m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"5F-XsZ18SQw2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["baru"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"tJIONtSglZGP","executionInfo":{"status":"ok","timestamp":1737033925537,"user_tz":-420,"elapsed":489,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"}},"outputId":"6ed4e85d-c8f6-4f4c-a02a-bea4595f70e2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                   title  label_score  \\\n","0      Masuk Radar Pilwalkot Medan, Menantu Jokowi Be...            0   \n","1      Malaysia Sudutkan RI: Isu Kabut Asap hingga In...            0   \n","2      Viral! Driver Ojol di Bekasi Antar Pesanan Mak...            1   \n","3      Kemensos Salurkan Rp 7,3 M bagi Korban Kerusuh...            0   \n","4      Terkait Mayat Bayi Mengenaskan di Tangerang, S...            0   \n","...                                                  ...          ...   \n","14995  Tolak RUU Pertanahan, Ribuan Petani Siap Gelar...            0   \n","14996  Ada Niat Tambah Momongan Tanpa Ikut Program Ha...            1   \n","14997  Beredar Isu Internet Papua Diblokir Lagi, Telk...            0   \n","14998   TXT Akan Segera Comeback, Soobin Akui Gatal I...            1   \n","14999  Emmy Awards 2019: Peter Dinklage Cetak Rekor B...            0   \n","\n","                                              clean_text  \n","0      masuk radar pilwalkot medan menantu jokowi ber...  \n","1      malaysia sudutkan ri isu kabut asap hingga inv...  \n","2      viral driver ojol di bekasi antar pesanan maka...  \n","3      kemensos salurkan rp 73 m bagi korban kerusuha...  \n","4      terkait mayat bayi mengenaskan di tangerang se...  \n","...                                                  ...  \n","14995  tolak ruu pertanahan ribuan petani siap gelar ...  \n","14996  ada niat tambah momongan tanpa ikut program ha...  \n","14997  beredar isu internet papua diblokir lagi telko...  \n","14998  txt akan segera comeback soobin akui gatal ing...  \n","14999  emmy awards 2019 peter dinklage cetak rekor ba...  \n","\n","[14978 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-982f892e-68c9-4e79-8866-d6c57fae4922\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>label_score</th>\n","      <th>clean_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Masuk Radar Pilwalkot Medan, Menantu Jokowi Be...</td>\n","      <td>0</td>\n","      <td>masuk radar pilwalkot medan menantu jokowi ber...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Malaysia Sudutkan RI: Isu Kabut Asap hingga In...</td>\n","      <td>0</td>\n","      <td>malaysia sudutkan ri isu kabut asap hingga inv...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Viral! Driver Ojol di Bekasi Antar Pesanan Mak...</td>\n","      <td>1</td>\n","      <td>viral driver ojol di bekasi antar pesanan maka...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kemensos Salurkan Rp 7,3 M bagi Korban Kerusuh...</td>\n","      <td>0</td>\n","      <td>kemensos salurkan rp 73 m bagi korban kerusuha...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Terkait Mayat Bayi Mengenaskan di Tangerang, S...</td>\n","      <td>0</td>\n","      <td>terkait mayat bayi mengenaskan di tangerang se...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>14995</th>\n","      <td>Tolak RUU Pertanahan, Ribuan Petani Siap Gelar...</td>\n","      <td>0</td>\n","      <td>tolak ruu pertanahan ribuan petani siap gelar ...</td>\n","    </tr>\n","    <tr>\n","      <th>14996</th>\n","      <td>Ada Niat Tambah Momongan Tanpa Ikut Program Ha...</td>\n","      <td>1</td>\n","      <td>ada niat tambah momongan tanpa ikut program ha...</td>\n","    </tr>\n","    <tr>\n","      <th>14997</th>\n","      <td>Beredar Isu Internet Papua Diblokir Lagi, Telk...</td>\n","      <td>0</td>\n","      <td>beredar isu internet papua diblokir lagi telko...</td>\n","    </tr>\n","    <tr>\n","      <th>14998</th>\n","      <td>TXT Akan Segera Comeback, Soobin Akui Gatal I...</td>\n","      <td>1</td>\n","      <td>txt akan segera comeback soobin akui gatal ing...</td>\n","    </tr>\n","    <tr>\n","      <th>14999</th>\n","      <td>Emmy Awards 2019: Peter Dinklage Cetak Rekor B...</td>\n","      <td>0</td>\n","      <td>emmy awards 2019 peter dinklage cetak rekor ba...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>14978 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-982f892e-68c9-4e79-8866-d6c57fae4922')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-982f892e-68c9-4e79-8866-d6c57fae4922 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-982f892e-68c9-4e79-8866-d6c57fae4922');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5a3913d0-95cb-44a7-9f85-0bf604df0fdd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5a3913d0-95cb-44a7-9f85-0bf604df0fdd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5a3913d0-95cb-44a7-9f85-0bf604df0fdd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d6b2aa2a-dfec-4144-9b63-0eed1deb5f1e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('baru')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d6b2aa2a-dfec-4144-9b63-0eed1deb5f1e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('baru');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"baru","summary":"{\n  \"name\": \"baru\",\n  \"rows\": 14978,\n  \"fields\": [\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14970,\n        \"samples\": [\n          \"Gantikan Dimas Ekky, Andi Gilang Finis Posisi 24 Moto2 Misano\",\n          \"Film Lorong, Rekor Terberat Prisia Nasution Jalani Syuting Lebih 24 Jam\",\n          \"BJ Habibie Meninggal, Bunga Citra Lestari Sempat Disangka Pegawai Bank Oleh Beliau\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clean_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14965,\n        \"samples\": [\n          \"kekayaannya dikritik miliarder schultz kehidupan saya itu american dream\",\n          \"film lorong rekor terberat prisia nasution jalani syuting lebih 24 jam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11597,"status":"ok","timestamp":1737033937129,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"},"user_tz":-420},"id":"9bss7AktbEwp","outputId":"092d29fc-a696-4e72-acec-673ea9c5f4dc"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting Sastrawi\n","  Downloading Sastrawi-1.0.1-py2.py3-none-any.whl.metadata (909 bytes)\n","Downloading Sastrawi-1.0.1-py2.py3-none-any.whl (209 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m209.7/209.7 kB\u001b[0m \u001b[31m4.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: Sastrawi\n","Successfully installed Sastrawi-1.0.1\n"]}],"source":["!pip install Sastrawi"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GLESQLmzZP3G","outputId":"94ee4fb4-696d-45f0-8466-4ce6bf8f849f","executionInfo":{"status":"ok","timestamp":1737035180535,"user_tz":-420,"elapsed":1243414,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n","[nltk_data] Downloading package punkt_tab to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt_tab.zip.\n","<ipython-input-15-4ef0533993c0>:21: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  baru['clean_text'] = baru['title'].apply(tokenize_and_stem)\n"]}],"source":["# Inisialisasi stop words dan stemmery\n","\n","import nltk\n","\n","nltk.download('stopwords')\n","nltk.download('punkt')\n","nltk.download('punkt_tab')\n","from nltk.corpus import stopwords\n","from nltk.tokenize import word_tokenize\n","from Sastrawi.Stemmer.StemmerFactory import StemmerFactory\n","\n","stop_words = set(stopwords.words('indonesian'))\n","stemmer = StemmerFactory().create_stemmer()\n","\n","def tokenize_and_stem(text):\n","    words = word_tokenize(text)\n","    # words = [stemmer.stem(word) for word in words if word not in stop_words and word.isalpha()]\n","    words = [stemmer.stem(word) for word in words if word not in stop_words]\n","    return ' '.join(words)\n","\n","baru['clean_text'] = baru['title'].apply(tokenize_and_stem)"]},{"cell_type":"code","source":["baru['clean_text']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"UgAYnTwRPQ-T","executionInfo":{"status":"ok","timestamp":1737035180535,"user_tz":-420,"elapsed":41,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"}},"outputId":"5fd34214-c3d5-4bdb-d388-1d8cc9d19e66"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        masuk radar pilwalkot medan  menantu jokowi te...\n","1            malaysia sudut ri  isu kabut asap invasi babi\n","2        viral  driver ojol bekas antar pesan makan pak...\n","3        kemensos salur rp 7 3 m korban rusuh sosial papua\n","4        kait mayat bayi enas tangerang  orang pria tan...\n","                               ...                        \n","14995    tolak ruu tanah  ribu tani siap gelar aksi ist...\n","14996    ada niat tambah momong tanpa ikut program hami...\n","14997    edar isu internet papua blokir lagi  telkom mi...\n","14998    txt akan segera comeback  soobin aku gatal ing...\n","14999    emmy awards 2019  peter dinklage cetak rekor b...\n","Name: clean_text, Length: 14978, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clean_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>masuk radar pilwalkot medan  menantu jokowi te...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>malaysia sudut ri  isu kabut asap invasi babi</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>viral  driver ojol bekas antar pesan makan pak...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>kemensos salur rp 7 3 m korban rusuh sosial papua</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>kait mayat bayi enas tangerang  orang pria tan...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>14995</th>\n","      <td>tolak ruu tanah  ribu tani siap gelar aksi ist...</td>\n","    </tr>\n","    <tr>\n","      <th>14996</th>\n","      <td>ada niat tambah momong tanpa ikut program hami...</td>\n","    </tr>\n","    <tr>\n","      <th>14997</th>\n","      <td>edar isu internet papua blokir lagi  telkom mi...</td>\n","    </tr>\n","    <tr>\n","      <th>14998</th>\n","      <td>txt akan segera comeback  soobin aku gatal ing...</td>\n","    </tr>\n","    <tr>\n","      <th>14999</th>\n","      <td>emmy awards 2019  peter dinklage cetak rekor b...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>14978 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["from gensim.models import Word2Vec\n","from nltk.tokenize import word_tokenize\n","\n","# Tokenisasi data teks\n","sentences = baru['clean_text'].apply(word_tokenize).tolist()\n","\n","# Training Word2Vec\n","word2vec_model = Word2Vec(sentences, vector_size=100, window=5, min_count=5, workers=4, sg=1)\n","\n","# Save model Word2Vec untuk keperluan selanjutnya\n","word2vec_model.save(\"word2vec_model_clickbait.model\")\n"],"metadata":{"id":"zN957MNbs-al"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","\n","# Tokenisasi data teks\n","tokenizer = Tokenizer()\n","tokenizer.fit_on_texts(baru['clean_text'])\n","\n","# Konversi teks menjadi sequence angka\n","sequences = tokenizer.texts_to_sequences(baru['clean_text'])\n","\n","# Padding sequence agar memiliki panjang yang sama\n","max_sequence_length = max(len(seq) for seq in sequences)\n","padded_sequences = pad_sequences(sequences, maxlen=max_sequence_length, padding='post')\n","\n","# Buat embedding matrix dari Word2Vec\n","word_index = tokenizer.word_index\n","embedding_dim = word2vec_model.vector_size\n","embedding_matrix = np.zeros((len(word_index) + 1, embedding_dim))\n","\n","for word, i in word_index.items():\n","    if word in word2vec_model.wv:\n","        embedding_matrix[i] = word2vec_model.wv[word]\n"],"metadata":{"id":"eJCLm0Q6tmL0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.models import Model\n","\n","from tensorflow.keras.layers import Input, Embedding, LSTM, Conv1D, MaxPooling1D, Flatten, Dense, Dropout, concatenate, GlobalMaxPooling1D\n","\n","# Input layer\n","input_layer = Input(shape=(max_sequence_length,))\n","\n","# Embedding layer\n","embedding_layer = Embedding(input_dim=len(word_index) + 1,\n","                            output_dim=embedding_dim,\n","                            weights=[embedding_matrix],\n","                            input_length=max_sequence_length,\n","                            trainable=False)(input_layer)\n","\n","# LSTM branch\n","lstm_layer = LSTM(128, return_sequences=True)(embedding_layer)\n","lstm_output = GlobalMaxPooling1D()(lstm_layer)\n","\n","# CNN branch\n","cnn_layer = Conv1D(64, kernel_size=3, activation='relu')(embedding_layer)\n","cnn_layer = MaxPooling1D(pool_size=2)(cnn_layer)\n","cnn_output = Flatten()(cnn_layer)\n","\n","# Concatenate LSTM and CNN outputs# Embedding layer (trainable=True)\n","embedding_layer = Embedding(input_dim=len(word_index) + 1,\n","                            output_dim=embedding_dim,\n","                            weights=[embedding_matrix],\n","                            input_length=max_sequence_length,\n","                            trainable=True)(input_layer)\n","\n","# LSTM branch with recurrent dropout\n","lstm_layer = LSTM(128, return_sequences=True, dropout=0.2, recurrent_dropout=0.2)(embedding_layer)\n","lstm_output = GlobalMaxPooling1D()(lstm_layer)\n","\n","# CNN branch with additional Conv1D layer\n","cnn_layer = Conv1D(128, kernel_size=3, activation='relu', padding='same')(embedding_layer)\n","cnn_layer = MaxPooling1D(pool_size=2)(cnn_layer)\n","cnn_layer = Conv1D(128, kernel_size=3, activation='relu', padding='same')(cnn_layer)\n","cnn_output = GlobalMaxPooling1D()(cnn_layer)\n","\n","# Concatenate\n","concat_layer = concatenate([lstm_output, cnn_output])\n","\n","# Dense layers with batch normalization\n","dense_layer = Dense(128, activation='relu', kernel_regularizer=l2(0.001))(concat_layer)\n","dense_layer = Dropout(0.5)(dense_layer)\n","dense_layer = Dense(64, activation='relu', kernel_regularizer=l2(0.001))(dense_layer)\n","dense_layer = Dropout(0.5)(dense_layer)\n","output_layer = Dense(1, activation='sigmoid')(dense_layer)\n","\n","# Compile model\n","model = Model(inputs=input_layer, outputs=output_layer)\n","model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n","concat_layer = concatenate([lstm_output, cnn_output])\n","\n","\n","from tensorflow.keras.regularizers import l2\n","\n","dense_layer = Dense(64, activation='relu', kernel_regularizer=l2(0.001))(concat_layer)\n","\n","dense_layer = Dropout(0.5)(dense_layer)\n","output_layer = Dense(1, activation='sigmoid')(dense_layer)\n","\n","# Build and compile the model\n","model = Model(inputs=input_layer, outputs=output_layer)\n","model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n","\n","model.summary()"],"metadata":{"id":"AJdNaMTytodn","colab":{"base_uri":"https://localhost:8080/","height":593},"executionInfo":{"status":"ok","timestamp":1737043536012,"user_tz":-420,"elapsed":531,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"}},"outputId":"6c497267-72aa-4d8e-84ec-ec7ef575325a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"functional_4\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional_4\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)             \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m       Param #\u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mConnected to          \u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━┩\n","│ input_layer_3             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m19\u001b[0m)             │              \u001b[38;5;34m0\u001b[0m │ -                      │\n","│ (\u001b[38;5;33mInputLayer\u001b[0m)              │                        │                │                        │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ embedding_5 (\u001b[38;5;33mEmbedding\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m19\u001b[0m, \u001b[38;5;34m100\u001b[0m)        │      \u001b[38;5;34m1,337,700\u001b[0m │ input_layer_3[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ conv1d_6 (\u001b[38;5;33mConv1D\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m19\u001b[0m, \u001b[38;5;34m128\u001b[0m)        │         \u001b[38;5;34m38,528\u001b[0m │ embedding_5[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]      │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ max_pooling1d_5           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m128\u001b[0m)         │              \u001b[38;5;34m0\u001b[0m │ conv1d_6[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]         │\n","│ (\u001b[38;5;33mMaxPooling1D\u001b[0m)            │                        │                │                        │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ lstm_5 (\u001b[38;5;33mLSTM\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m19\u001b[0m, \u001b[38;5;34m128\u001b[0m)        │        \u001b[38;5;34m117,248\u001b[0m │ embedding_5[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]      │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ conv1d_7 (\u001b[38;5;33mConv1D\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m9\u001b[0m, \u001b[38;5;34m128\u001b[0m)         │         \u001b[38;5;34m49,280\u001b[0m │ max_pooling1d_5[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]  │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ global_max_pooling1d_6    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)            │              \u001b[38;5;34m0\u001b[0m │ lstm_5[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]           │\n","│ (\u001b[38;5;33mGlobalMaxPooling1D\u001b[0m)      │                        │                │                        │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ global_max_pooling1d_7    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)            │              \u001b[38;5;34m0\u001b[0m │ conv1d_7[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]         │\n","│ (\u001b[38;5;33mGlobalMaxPooling1D\u001b[0m)      │                        │                │                        │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ concatenate_5             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m256\u001b[0m)            │              \u001b[38;5;34m0\u001b[0m │ global_max_pooling1d_… │\n","│ (\u001b[38;5;33mConcatenate\u001b[0m)             │                        │                │ global_max_pooling1d_… │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ dense_12 (\u001b[38;5;33mDense\u001b[0m)          │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │         \u001b[38;5;34m16,448\u001b[0m │ concatenate_5[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ dropout_7 (\u001b[38;5;33mDropout\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │              \u001b[38;5;34m0\u001b[0m │ dense_12[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]         │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ dense_13 (\u001b[38;5;33mDense\u001b[0m)          │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │             \u001b[38;5;34m65\u001b[0m │ dropout_7[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]        │\n","└───────────────────────────┴────────────────────────┴────────────────┴────────────────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)              </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">        Param # </span>┃<span style=\"font-weight: bold\"> Connected to           </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━┩\n","│ input_layer_3             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">19</span>)             │              <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                      │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)              │                        │                │                        │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ embedding_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">19</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)        │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,337,700</span> │ input_layer_3[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ conv1d_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv1D</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">19</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)        │         <span style=\"color: #00af00; text-decoration-color: #00af00\">38,528</span> │ embedding_5[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]      │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ max_pooling1d_5           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">9</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)         │              <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ conv1d_6[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]         │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling1D</span>)            │                        │                │                        │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ lstm_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">19</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)        │        <span style=\"color: #00af00; text-decoration-color: #00af00\">117,248</span> │ embedding_5[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]      │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ conv1d_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv1D</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">9</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)         │         <span style=\"color: #00af00; text-decoration-color: #00af00\">49,280</span> │ max_pooling1d_5[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]  │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ global_max_pooling1d_6    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)            │              <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ lstm_5[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]           │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GlobalMaxPooling1D</span>)      │                        │                │                        │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ global_max_pooling1d_7    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)            │              <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ conv1d_7[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]         │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GlobalMaxPooling1D</span>)      │                        │                │                        │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ concatenate_5             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)            │              <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ global_max_pooling1d_… │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Concatenate</span>)             │                        │                │ global_max_pooling1d_… │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ dense_12 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)          │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │         <span style=\"color: #00af00; text-decoration-color: #00af00\">16,448</span> │ concatenate_5[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ dropout_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │              <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ dense_12[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]         │\n","├───────────────────────────┼────────────────────────┼────────────────┼────────────────────────┤\n","│ dense_13 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)          │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │             <span style=\"color: #00af00; text-decoration-color: #00af00\">65</span> │ dropout_7[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]        │\n","└───────────────────────────┴────────────────────────┴────────────────┴────────────────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m1,559,269\u001b[0m (5.95 MB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,559,269</span> (5.95 MB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m1,559,269\u001b[0m (5.95 MB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,559,269</span> (5.95 MB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X = padded_sequences\n","y = baru['label_score']\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n"],"metadata":{"id":"6fdp6C-uxHGp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history = model.fit(X_train, y_train, epochs=15, batch_size=32, validation_data=(X_test, y_test))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WnC_B_cVxIrs","executionInfo":{"status":"ok","timestamp":1737043853962,"user_tz":-420,"elapsed":311889,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"}},"outputId":"016c5a7a-7c3a-4dd2-d210-7fd04adfc1d8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 54ms/step - accuracy: 0.6631 - loss: 0.6667 - val_accuracy: 0.7834 - val_loss: 0.4903\n","Epoch 2/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 49ms/step - accuracy: 0.8231 - loss: 0.4210 - val_accuracy: 0.7967 - val_loss: 0.4716\n","Epoch 3/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 50ms/step - accuracy: 0.9073 - loss: 0.2539 - val_accuracy: 0.7617 - val_loss: 0.6094\n","Epoch 4/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 52ms/step - accuracy: 0.9551 - loss: 0.1376 - val_accuracy: 0.7477 - val_loss: 0.8564\n","Epoch 5/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 51ms/step - accuracy: 0.9755 - loss: 0.0825 - val_accuracy: 0.7336 - val_loss: 1.0484\n","Epoch 6/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 50ms/step - accuracy: 0.9865 - loss: 0.0469 - val_accuracy: 0.7343 - val_loss: 1.3029\n","Epoch 7/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 50ms/step - accuracy: 0.9937 - loss: 0.0287 - val_accuracy: 0.7457 - val_loss: 1.4812\n","Epoch 8/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 50ms/step - accuracy: 0.9958 - loss: 0.0202 - val_accuracy: 0.7427 - val_loss: 1.6706\n","Epoch 9/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 49ms/step - accuracy: 0.9977 - loss: 0.0138 - val_accuracy: 0.7336 - val_loss: 1.8828\n","Epoch 10/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 50ms/step - accuracy: 0.9968 - loss: 0.0148 - val_accuracy: 0.7296 - val_loss: 1.8548\n","Epoch 11/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 49ms/step - accuracy: 0.9976 - loss: 0.0127 - val_accuracy: 0.7467 - val_loss: 1.8128\n","Epoch 12/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 50ms/step - accuracy: 0.9968 - loss: 0.0141 - val_accuracy: 0.7440 - val_loss: 2.0576\n","Epoch 13/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 49ms/step - accuracy: 0.9972 - loss: 0.0128 - val_accuracy: 0.7156 - val_loss: 2.0788\n","Epoch 14/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 53ms/step - accuracy: 0.9980 - loss: 0.0105 - val_accuracy: 0.7380 - val_loss: 2.1423\n","Epoch 15/15\n","\u001b[1m375/375\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 49ms/step - accuracy: 0.9991 - loss: 0.0064 - val_accuracy: 0.7467 - val_loss: 1.9866\n"]}]},{"cell_type":"code","source":["loss, accuracy = model.evaluate(X_test, y_test)\n","print(f'Loss: {loss}')\n","print(f'Accuracy: {accuracy}')\n"],"metadata":{"id":"9S1X_0OexRts","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1737044675532,"user_tz":-420,"elapsed":1442,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"}},"outputId":"443baf1a-2082-4917-9230-f251fdb8650d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m94/94\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 11ms/step - accuracy: 0.7327 - loss: 2.0557\n","Loss: 1.986626386642456\n","Accuracy: 0.7466621994972229\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Plot training & validation accuracy values\n","plt.plot(history.history['accuracy'])\n","plt.plot(history.history['val_accuracy'])\n","plt.title('Model accuracy')\n","plt.ylabel('Accuracy')\n","plt.xlabel('Epoch')\n","plt.legend(['Train', 'Test'], loc='upper left')\n","plt.show()\n","\n","# Plot training & validation loss values\n","plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.title('Model loss')\n","plt.ylabel('Loss')\n","plt.xlabel('Epoch')\n","plt.legend(['Train', 'Test'], loc='upper left')\n","plt.show()\n"],"metadata":{"id":"loFSjSBIxVEz","colab":{"base_uri":"https://localhost:8080/","height":927},"executionInfo":{"status":"ok","timestamp":1737036236475,"user_tz":-420,"elapsed":855,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"}},"outputId":"d6980d31-dfe4-407f-d6a8-6ec378665bbf"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n","\n","# Membuat prediksi dari data pengujian\n","y_pred = model.predict(X_test)\n","y_pred = (y_pred > 0.5).astype(int)\n","\n","# Menghitung metrik performa\n","accuracy = accuracy_score(y_test, y_pred)\n","precision = precision_score(y_test, y_pred)\n","recall = recall_score(y_test, y_pred)\n","f1 = f1_score(y_test, y_pred)\n","\n","print(f'Accuracy: {accuracy}')\n","print(f'Precision: {precision}')\n","print(f'Recall: {recall}')\n","print(f'F1 Score: {f1}')\n","\n","# Membuat confusion matrix\n","cm = confusion_matrix(y_test, y_pred)\n","\n","# Visualisasi confusion matrix\n","plt.figure(figsize=(10, 7))\n","sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Not Clickbait', 'Clickbait'], yticklabels=['Not Clickbait', 'Clickbait'])\n","plt.xlabel('Predicted Label')\n","plt.ylabel('True Label')\n","plt.title('Confusion Matrix')\n","plt.show()\n"],"metadata":{"id":"IBbZY4X5b94v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Atur agar teks panjang di kolom tampil penuh\n","pd.set_option('display.max_colwidth', None)\n","\n","# Tampilkan dataframe\n","baru\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"i0GAADkjbjck","executionInfo":{"status":"ok","timestamp":1737036299594,"user_tz":-420,"elapsed":548,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"}},"outputId":"6563cb63-2fa7-437a-a837-646461e1d898"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                                                                      title  \\\n","0                                      Masuk Radar Pilwalkot Medan, Menantu Jokowi Bertemu DPW NasDem Sumut   \n","1                                                   Malaysia Sudutkan RI: Isu Kabut Asap hingga Invasi Babi   \n","2                                           Viral! Driver Ojol di Bekasi Antar Pesanan Makanan Pakai Sepeda   \n","3                                          Kemensos Salurkan Rp 7,3 M bagi Korban Kerusuhan Sosial di Papua   \n","4                                Terkait Mayat Bayi Mengenaskan di Tangerang, Seorang Pria Ditangkap Polisi   \n","...                                                                                                     ...   \n","14995                                Tolak RUU Pertanahan, Ribuan Petani Siap Gelar Aksi di Istana-DPR Esok   \n","14996               Ada Niat Tambah Momongan Tanpa Ikut Program Hamil, Fedi Nuril: Kalau Pengin Ya Buat Aja   \n","14997                        Beredar Isu Internet Papua Diblokir Lagi, Telkom Minta Warga Tak Percaya Hoaks   \n","14998                                       TXT Akan Segera Comeback, Soobin Akui Gatal Ingin Pamer Spoiler   \n","14999  Emmy Awards 2019: Peter Dinklage Cetak Rekor Baru Berkat Peran Tyrion Lannister di 'Game of Thrones'   \n","\n","       label_score  \\\n","0                0   \n","1                0   \n","2                1   \n","3                0   \n","4                0   \n","...            ...   \n","14995            0   \n","14996            1   \n","14997            0   \n","14998            1   \n","14999            0   \n","\n","                                                                                             clean_text  \n","0                                     masuk radar pilwalkot medan  menantu jokowi temu dpw nasdem sumut  \n","1                                                         malaysia sudut ri  isu kabut asap invasi babi  \n","2                                               viral  driver ojol bekas antar pesan makan pakai sepeda  \n","3                                                     kemensos salur rp 7 3 m korban rusuh sosial papua  \n","4                                             kait mayat bayi enas tangerang  orang pria tangkap polisi  \n","...                                                                                                 ...  \n","14995                                        tolak ruu tanah  ribu tani siap gelar aksi istana-dpr esok  \n","14996             ada niat tambah momong tanpa ikut program hamil  fedi nuril  kalau pengin ya buat aja  \n","14997                         edar isu internet papua blokir lagi  telkom minta warga tak percaya hoaks  \n","14998                                    txt akan segera comeback  soobin aku gatal ingin pamer spoiler  \n","14999  emmy awards 2019  peter dinklage cetak rekor baru berkat peran tyrion lannister game of thrones   \n","\n","[14978 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-989dc091-6053-483f-acec-f088154d4098\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>label_score</th>\n","      <th>clean_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Masuk Radar Pilwalkot Medan, Menantu Jokowi Bertemu DPW NasDem Sumut</td>\n","      <td>0</td>\n","      <td>masuk radar pilwalkot medan  menantu jokowi temu dpw nasdem sumut</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Malaysia Sudutkan RI: Isu Kabut Asap hingga Invasi Babi</td>\n","      <td>0</td>\n","      <td>malaysia sudut ri  isu kabut asap invasi babi</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Viral! Driver Ojol di Bekasi Antar Pesanan Makanan Pakai Sepeda</td>\n","      <td>1</td>\n","      <td>viral  driver ojol bekas antar pesan makan pakai sepeda</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kemensos Salurkan Rp 7,3 M bagi Korban Kerusuhan Sosial di Papua</td>\n","      <td>0</td>\n","      <td>kemensos salur rp 7 3 m korban rusuh sosial papua</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Terkait Mayat Bayi Mengenaskan di Tangerang, Seorang Pria Ditangkap Polisi</td>\n","      <td>0</td>\n","      <td>kait mayat bayi enas tangerang  orang pria tangkap polisi</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>14995</th>\n","      <td>Tolak RUU Pertanahan, Ribuan Petani Siap Gelar Aksi di Istana-DPR Esok</td>\n","      <td>0</td>\n","      <td>tolak ruu tanah  ribu tani siap gelar aksi istana-dpr esok</td>\n","    </tr>\n","    <tr>\n","      <th>14996</th>\n","      <td>Ada Niat Tambah Momongan Tanpa Ikut Program Hamil, Fedi Nuril: Kalau Pengin Ya Buat Aja</td>\n","      <td>1</td>\n","      <td>ada niat tambah momong tanpa ikut program hamil  fedi nuril  kalau pengin ya buat aja</td>\n","    </tr>\n","    <tr>\n","      <th>14997</th>\n","      <td>Beredar Isu Internet Papua Diblokir Lagi, Telkom Minta Warga Tak Percaya Hoaks</td>\n","      <td>0</td>\n","      <td>edar isu internet papua blokir lagi  telkom minta warga tak percaya hoaks</td>\n","    </tr>\n","    <tr>\n","      <th>14998</th>\n","      <td>TXT Akan Segera Comeback, Soobin Akui Gatal Ingin Pamer Spoiler</td>\n","      <td>1</td>\n","      <td>txt akan segera comeback  soobin aku gatal ingin pamer spoiler</td>\n","    </tr>\n","    <tr>\n","      <th>14999</th>\n","      <td>Emmy Awards 2019: Peter Dinklage Cetak Rekor Baru Berkat Peran Tyrion Lannister di 'Game of Thrones'</td>\n","      <td>0</td>\n","      <td>emmy awards 2019  peter dinklage cetak rekor baru berkat peran tyrion lannister game of thrones</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>14978 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-989dc091-6053-483f-acec-f088154d4098')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-989dc091-6053-483f-acec-f088154d4098 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-989dc091-6053-483f-acec-f088154d4098');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c1ac1b38-f709-46d2-889d-d214bc6542c8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c1ac1b38-f709-46d2-889d-d214bc6542c8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c1ac1b38-f709-46d2-889d-d214bc6542c8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e9fd98c0-5d98-420f-9ca8-31f15b356bb2\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('baru')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e9fd98c0-5d98-420f-9ca8-31f15b356bb2 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('baru');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"baru","summary":"{\n  \"name\": \"baru\",\n  \"rows\": 14978,\n  \"fields\": [\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14970,\n        \"samples\": [\n          \"Gantikan Dimas Ekky, Andi Gilang Finis Posisi 24 Moto2 Misano\",\n          \"Film Lorong, Rekor Terberat Prisia Nasution Jalani Syuting Lebih 24 Jam\",\n          \"BJ Habibie Meninggal, Bunga Citra Lestari Sempat Disangka Pegawai Bank Oleh Beliau\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clean_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14962,\n        \"samples\": [\n          \"ketika jan ethes angkat kaki paha jokowi\",\n          \"atlet bulu tangkis makassar hening cipta untuk bj habibie\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["import pandas as pd\n","from google.colab import files\n","\n","df_bersih = pd.DataFrame(baru)\n","\n","# Simpan file sebagai CSV\n","nama_file = 'data_bersih.csv'\n","df_bersih.to_csv(nama_file, index=False)\n","\n","# Download file\n","files.download(nama_file)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"zsPGe3l_7v7H","executionInfo":{"status":"ok","timestamp":1737044757826,"user_tz":-420,"elapsed":344,"user":{"displayName":"Aditya Darma","userId":"01878828741807480365"}},"outputId":"46f03fe9-fce6-41b8-9aa1-c608406a8b27"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_6604ac81-8036-4291-bee2-4dae79abbe3d\", \"data_bersih.csv\", 1877710)"]},"metadata":{}}]}],"metadata":{"colab":{"provenance":[{"file_id":"1iUSduP97liw764Zb5Zis9zr7qGBAeFS3","timestamp":1736827270968}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}